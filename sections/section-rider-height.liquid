{% render 'section-padding',
  section-id: section.id,
  padding-top: section.settings.padding_top,
  padding-bottom: section.settings.padding_bottom
%}

<style>
  .rider-height-{{ section.id }} {
    --column-gap-desktop: 60px;
    --column-gap-tablet: 30px;
    --column-gap-mobile: 20px;
    --image-radius: 12px;
  }
  
  .rider-height-{{ section.id }} .rider-height__container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  .rider-height-{{ section.id }} .rider-height__grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--column-gap-mobile);
    align-items: center;
  }
  
  @media (min-width: 768px) {
    .rider-height-{{ section.id }} .rider-height__grid {
      gap: var(--column-gap-tablet);
    }
  }
  
  @media (min-width: 1024px) {
    .rider-height-{{ section.id }} .rider-height__grid {
      grid-template-columns: minmax(0, 750px) 1fr;
      gap: var(--column-gap-desktop);
    }
  }
  
  .rider-height-{{ section.id }} .rider-height__images {
    position: relative;
    width: 100%;
  }
  
  .rider-height-{{ section.id }} .rider-height__image {
    position: relative;
    aspect-ratio: 0.96;
    border-radius: var(--image-radius);
    overflow: hidden;
    background: var(--color--background-lightest, #f8f8f8);
  }
  
  .rider-height-{{ section.id }} .rider-height__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
  
  .rider-height-{{ section.id }} .rider-height__image--primary {
    position: relative;
    z-index: 2;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }
  
  .rider-height-{{ section.id }} .rider-height__image--secondary {
    position: absolute;
    top: -20px;
    right: -32px;
    z-index: 1;
    width: 85%;
  }
  
  @media (min-width: 768px) {
    .rider-height-{{ section.id }} .rider-height__image--secondary {
      top: -40px;
      right: -80px;
      width: 80%;
    }
  }
  
  @media (min-width: 1024px) {
    .rider-height-{{ section.id }} .rider-height__image--secondary {
      top: -60px;
      right: -120px;
      width: 75%;
    }
  }
  
  @media (min-width: 1280px) {
    .rider-height-{{ section.id }} .rider-height__image--secondary {
      top: -80px;
      right: -160px;
      width: 70%;
    }
  }
  
  .rider-height-{{ section.id }} .rider-height__content {
    text-align: left;
  }
  
  @media (max-width: 1023px) {
    .rider-height-{{ section.id }} .rider-height__content {
      margin-top: 24px;
    }
  }
  
  .rider-height-{{ section.id }} .rider-height__title {
    font-size: clamp(2rem, 5vw, 3.5rem);
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    color: var(--color--text, #212121);
  }
  
  .rider-height-{{ section.id }} .rider-height__description {
    max-width: 65ch;
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color--text, #212121);
  }
  
  .rider-height-{{ section.id }}.rider-height--parallax .rider-height__image--primary {
    transition: transform 0.1s ease-out;
  }
  
  .rider-height-{{ section.id }}.rider-height--parallax .rider-height__image--secondary {
    transition: transform 0.1s ease-out;
  }
</style>

<section class="section section--{{ section.id }} rider-height-{{ section.id }}{% if section.settings.enable_parallax %} rider-height--parallax{% endif %}" data-section-id="{{ section.id }}" data-section-type="rider-height">
  <div class="rider-height__container">
    <div class="rider-height__grid">
      <div class="rider-height__images" data-parallax-images>
        {% if section.settings.primary_image %}
          <div class="rider-height__image rider-height__image--primary" data-parallax-primary>
            <img
              src="{{ section.settings.primary_image | image_url: width: 405 }}"
              srcset="
                {{ section.settings.primary_image | image_url: width: 200 }} 200w,
                {{ section.settings.primary_image | image_url: width: 405 }} 405w,
                {{ section.settings.primary_image | image_url: width: 600 }} 600w,
                {{ section.settings.primary_image | image_url: width: 810 }} 810w,
                {{ section.settings.primary_image | image_url: width: 1200 }} 1200w
              "
              sizes="(min-width: 1024px) 405px, (min-width: 768px) 50vw, calc(50vw - 16px)"
              width="405"
              height="{{ 405 | divided_by: section.settings.primary_image.aspect_ratio | round }}"
              alt="{{ section.settings.primary_image.alt | escape }}"
              loading="lazy"
            >
          </div>
        {% else %}
          <div class="rider-height__image rider-height__image--primary" data-parallax-primary>
            {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--light' }}
          </div>
        {% endif %}
        
        {% if section.settings.secondary_image %}
          <div class="rider-height__image rider-height__image--secondary" data-parallax-secondary>
            <img
              src="{{ section.settings.secondary_image | image_url: width: 405 }}"
              srcset="
                {{ section.settings.secondary_image | image_url: width: 200 }} 200w,
                {{ section.settings.secondary_image | image_url: width: 405 }} 405w,
                {{ section.settings.secondary_image | image_url: width: 600 }} 600w,
                {{ section.settings.secondary_image | image_url: width: 810 }} 810w,
                {{ section.settings.secondary_image | image_url: width: 1200 }} 1200w
              "
              sizes="(min-width: 1024px) 405px, (min-width: 768px) 50vw, calc(50vw - 16px)"
              width="405"
              height="{{ 405 | divided_by: section.settings.secondary_image.aspect_ratio | round }}"
              alt="{{ section.settings.secondary_image.alt | escape }}"
              loading="lazy"
            >
          </div>
        {% else %}
          <div class="rider-height__image rider-height__image--secondary" data-parallax-secondary>
            {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--light' }}
          </div>
        {% endif %}
      </div>
      
      <div class="rider-height__content">
        {% unless section.settings.title == blank %}
          <h2 class="rider-height__title section__title">
            <span class="section__title-text">{{ section.settings.title | escape }}</span>
          </h2>
        {% endunless %}
        
        {% unless section.settings.description == blank %}
          <div class="rider-height__description rte">
            {{ section.settings.description }}
          </div>
        {% endunless %}
      </div>
    </div>
  </div>
</section>

{% if section.settings.enable_parallax %}
<script>
(function() {
  const section = document.querySelector('[data-section-id="{{ section.id }}"]');
  if (!section) return;
  
  const primaryImage = section.querySelector('[data-parallax-primary]');
  const secondaryImage = section.querySelector('[data-parallax-secondary]');
  
  let ticking = false;
  
  function updateParallax() {
    const rect = section.getBoundingClientRect();
    const viewportHeight = window.innerHeight;
    
    // Check if section is in viewport
    if (rect.bottom >= 0 && rect.top <= viewportHeight) {
      const sectionHeight = rect.height;
      const scrollProgress = Math.max(0, Math.min(1, (viewportHeight - rect.top) / (viewportHeight + sectionHeight)));
      
      // Move primary up 2% and secondary down 2%
      const primaryOffset = scrollProgress * -2;
      const secondaryOffset = scrollProgress * 2;
      
      if (primaryImage) {
        primaryImage.style.transform = `translateY(${primaryOffset}%)`;
      }
      
      if (secondaryImage) {
        // Add parallax to the secondary image
        secondaryImage.style.transform = `translateY(${secondaryOffset}%)`;
      }
    }
    
    ticking = false;
  }
  
  function onScroll() {
    if (!ticking) {
      requestAnimationFrame(updateParallax);
      ticking = true;
    }
  }
  
  // Initial call
  updateParallax();
  
  // Listen for scroll events
  window.addEventListener('scroll', onScroll, { passive: true });
  window.addEventListener('resize', updateParallax, { passive: true });
  
  // Cleanup on section unload (for theme customizer)
  document.addEventListener('shopify:section:unload', function(event) {
    if (event.detail.sectionId === '{{ section.id }}') {
      window.removeEventListener('scroll', onScroll);
      window.removeEventListener('resize', updateParallax);
    }
  });
})();
</script>
{% endif %}

{% schema %}
{
  "name": "Rider Height",
  "class": "section--rider-height",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Rider Height"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>All BEAST 750W models and colorways fit riders from 5'6\" to 6'5\"+ thanks to the extra long extendable seat post and easy adjustable handlebars.</p>"
    },
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "primary_image",
      "label": "Primary image (front)",
      "info": "Shows in front, anchored to bottom-left. Recommended size: 796×829px"
    },
    {
      "type": "image_picker",
      "id": "secondary_image",
      "label": "Secondary image (back)",
      "info": "Shows behind, offset to top-right. Recommended size: 796×829px"
    },
    {
      "type": "header",
      "content": "Effects"
    },
    {
      "type": "checkbox",
      "id": "enable_parallax",
      "label": "Enable parallax scroll effect",
      "default": true
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Top padding",
      "unit": "px",
      "min": 28,
      "max": 120,
      "step": 4,
      "default": 64
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Bottom padding",
      "unit": "px",
      "min": 28,
      "max": 120,
      "step": 4,
      "default": 64
    }
  ],
  "presets": [
    {
      "name": "Rider Height"
    }
  ],
  "enabled_on": {
    "templates": ["*"]
  }
}
{% endschema %}