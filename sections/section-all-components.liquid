<style type="text/css">
  .section--{{ section.id }} .all-components__wrapper {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
  @media screen and (max-width: 767px) {
    .section--{{ section.id }} .all-components__wrapper {
      padding-top: {{ section.settings.padding_top | times: 0.75 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 }}px;
    }
  }
  
  .accordion__content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  .accordion__list {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  .accordion__item {
    margin-bottom: 8px;
  }
  
  .accordion__item:last-child {
    margin-bottom: 0;
  }
  
  .accordion__title {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    height: 56px;
    padding: 0 20px;
    background: #fff;
    border: none;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 500;
    text-align: left;
    cursor: pointer;
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
  }
  
  @media screen and (max-width: 767px) {
    .accordion__title {
      height: 48px;
      padding: 0 16px;
      font-size: 14px;
    }
  }
  
  .accordion__title:hover,
  .accordion__title:focus {
    background: #f8f8f8;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    outline: none;
  }
  
  .accordion__title:focus {
    outline: 2px solid #0066cc;
    outline-offset: 2px;
  }
  
  .accordion__title-text {
    flex: 1;
    margin: 0;
  }
  
  .accordion__icons {
    display: flex;
    align-items: center;
    width: 20px;
    height: 20px;
    position: relative;
  }
  
  .icon-toggle-plus,
  .icon-toggle-minus {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 18px;
    height: 18px;
    stroke: currentColor;
    stroke-width: 2;
    transition: opacity 0.2s ease;
  }
  
  .icon-toggle-plus {
    opacity: 1;
  }
  
  .icon-toggle-minus {
    opacity: 0;
  }
  
  .accordion__title.is-expanded .icon-toggle-plus {
    opacity: 0;
  }
  
  .accordion__title.is-expanded .icon-toggle-minus {
    opacity: 1;
  }
  
  .accordion__text-wrapper {
    overflow: hidden;
    transition: height 0.25s ease;
    height: 0;
  }
  
  .accordion__text-wrapper.is-expanded {
    height: auto;
  }
  
  .accordion__text {
    padding: 20px 20px 16px 20px;
  }
  
  @media screen and (max-width: 767px) {
    .accordion__text {
      padding: 16px 16px 12px 16px;
    }
  }
  
  .accordion__text.rte p {
    margin-bottom: 12px;
  }
  
  .accordion__text.rte p:last-child {
    margin-bottom: 0;
  }
  
  .accordion__text.rte strong {
    font-weight: 600;
  }
  
  .accordion__text.rte a {
    color: #0066cc;
    text-decoration: underline;
  }
  
  .accordion__text.rte a:hover {
    text-decoration: none;
  }
  
  /* Fallback for native details and custom elements */
  accordion-group, details-content { 
    display: block; 
  }

  details[open] .accordion__text-wrapper { 
    height: auto; 
  }

  details[open] .accordion__title .icon-toggle-plus { 
    opacity: 0; 
  }
  
  details[open] .accordion__title .icon-toggle-minus { 
    opacity: 1; 
  }
</style>

<section class="section section--{{ section.id }} all-components" data-collapsible-single>
  <div class="container">
    <div class="all-components__wrapper">
      
      {% if section.settings.title != blank %}
        <div class="section__title">
          <h2 class="section__title-text h3">{{ section.settings.title }}</h2>
        </div>
      {% endif %}

      <div class="accordion__content">
        <accordion-group>
          <div class="accordion__list">
            {%- for block in section.blocks -%}
              <div class="accordion__item">
                <details id="components-{{ section.id }}-{{ forloop.index }}" {{ block.shopify_attributes }}>
                  <summary class="accordion__title" aria-expanded="false" aria-controls="content-{{ section.id }}-{{ forloop.index }}">
                    <span class="accordion__title-text">{{ block.settings.title | escape }}</span>
                    <div class="accordion__icons">
                      <svg class="icon-toggle-plus" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                      </svg>
                      <svg class="icon-toggle-minus" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M18 12H6"/>
                      </svg>
                    </div>
                  </summary>
                  
                  <div class="accordion__text-wrapper" id="content-{{ section.id }}-{{ forloop.index }}" aria-expanded="false">
                    {% unless block.settings.content == blank %}
                      <div class="accordion__text rte">
                        {{ block.settings.content }}
                      </div>
                    {% endunless %}
                  </div>
                </details>
              </div>
            {%- endfor -%}
          </div>
        </accordion-group>
      </div>
      
    </div>
  </div>
</section>

<script>
(function () {
  function init(root = document) {
    const groups = root.querySelectorAll('[data-collapsible-single]');
    groups.forEach(group => {
      const items = group.querySelectorAll('details');
      items.forEach(detail => {
        const summary = detail.querySelector('summary');
        const wrap = detail.querySelector('.accordion__text-wrapper');
        if (!summary || !wrap) return;

        // set starting height
        wrap.style.height = detail.open ? wrap.scrollHeight + 'px' : '0px';

        detail.addEventListener('toggle', () => {
          // single-open behavior
          if (detail.open) {
            items.forEach(d => d !== detail && (d.open = false));
          }

          if (detail.open) {
            summary.classList.add('is-expanded');
            wrap.style.height = wrap.scrollHeight + 'px';
            setTimeout(() => { wrap.style.height = 'auto'; }, 250);
          } else {
            summary.classList.remove('is-expanded');
            wrap.style.height = wrap.scrollHeight + 'px';
            requestAnimationFrame(() => { wrap.style.height = '0px'; });
          }
        });
      });
    });
  }

  // run now
  init();

  // run when sections are (re)loaded in the editor / dynamically
  document.addEventListener('shopify:section:load', e => init(e.target));
})();
</script>

{% schema %}
{
  "name": "All Components",
  "class": "js-section__all-components",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section title"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Top padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 24
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Bottom padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 30
    }
  ],
  "blocks": [
    {
      "type": "component_item",
      "name": "Component",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Component name",
          "default": "All Components"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Component details",
          "default": "<p><strong>Battery:</strong> High-performance lithium battery with extended range</p><p><strong>Brakes:</strong> Hydraulic disc brakes for reliable stopping power</p><p><strong>Motor:</strong> Efficient hub motor with multiple power modes</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "All Components",
      "blocks": [
        {
          "type": "component_item",
          "settings": {
            "title": "All Components",
            "content": "<p><strong>Battery:</strong> High-performance lithium battery with extended range</p><p><strong>Brakes:</strong> Hydraulic disc brakes for reliable stopping power</p><p><strong>Motor:</strong> Efficient hub motor with multiple power modes</p><p><strong>Frame:</strong> Lightweight aluminum alloy construction</p><p><strong>Display:</strong> LCD display with speed, battery, and mode indicators</p>"
          }
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": ["*"],
    "groups": ["header", "footer"]
  }
}
{% endschema %}