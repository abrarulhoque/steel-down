{%- liquid
  assign sizes = '(min-width:1024px) calc((100vw - 120px) * 0.6), (min-width:768px) calc((100vw - 40px) * 0.6), calc(100vw - 40px)'
  assign image_width = 'u-3/5@desk'
  assign text_width = 'u-2/5@desk'
-%}

{% render 'section-padding',
  section-id: section.id,
  padding-top: section.settings.padding_top,
  padding-bottom: section.settings.padding_bottom
%}

<style>
  .section--{{ section.id }} .geometry-specs__wrapper {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 60px;
  }
  
  @media screen and (max-width: 1023px) {
    .section--{{ section.id }} .geometry-specs__wrapper {
      padding: 0 20px;
    }
  }

  .section--{{ section.id }} .geometry-specs__title {
    text-align: center;
    margin-bottom: 40px;
    font-size: {{ section.settings.heading_size | times: 0.25 | plus: 1.5 }}rem;
  }

  @media screen and (max-width: 767px) {
    .section--{{ section.id }} .geometry-specs__title {
      margin-bottom: 20px;
    }
  }

  .section--{{ section.id }} .geometry-specs__content {
    display: grid;
    align-items: start;
    gap: 20px;
  }

  @media screen and (min-width: 768px) {
    .section--{{ section.id }} .geometry-specs__content {
      grid-template-columns: 2fr 3fr;
      gap: 40px;
    }
  }

  .section--{{ section.id }} .geometry-specs__image {
    position: relative;
    min-height: 250px;
  }

  @media screen and (min-width: 768px) {
    .section--{{ section.id }} .geometry-specs__image {
      min-height: 750px;
    }
  }

  .section--{{ section.id }} .geometry-specs__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    display: block;
    border-radius: 8px;
  }

  .section--{{ section.id }} .accordion__content {
    padding: 0;
  }

  .section--{{ section.id }} .accordion__item {
    margin-bottom: 0;
    border-bottom: 1px solid rgba(0,0,0,0.1);
  }

  .section--{{ section.id }} .accordion__item:first-child {
    border-top: 1px solid rgba(0,0,0,0.1);
  }

  .section--{{ section.id }} .accordion__title {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 16px 0;
    background: transparent;
    border: none;
    font-size: calc(var(--adjust-heading, 1) * 1.25rem);
    font-weight: 500;
    text-align: left;
    cursor: pointer;
    transition: all 150ms ease;
  }

  .section--{{ section.id }} .accordion__title:hover,
  .section--{{ section.id }} .accordion__title:focus {
    outline: none;
  }

  .section--{{ section.id }} .accordion__title:focus {
    outline: 2px solid #0066cc;
    outline-offset: 2px;
  }

  .section--{{ section.id }} .accordion__title-text {
    flex: 1;
    margin: 0;
    line-height: 1.2;
  }

  .section--{{ section.id }} .accordion__icons {
    display: flex;
    align-items: center;
    width: 24px;
    height: 24px;
    position: relative;
    flex-shrink: 0;
  }

  .section--{{ section.id }} .icon-toggle-plus,
  .section--{{ section.id }} .icon-toggle-minus {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    stroke: currentColor;
    stroke-width: 2;
    transition: opacity 150ms ease;
  }

  .section--{{ section.id }} .icon-toggle-plus {
    opacity: 1;
  }

  .section--{{ section.id }} .icon-toggle-minus {
    opacity: 0;
  }

  .section--{{ section.id }} .accordion__title[aria-expanded="true"] .icon-toggle-plus {
    opacity: 0;
  }

  .section--{{ section.id }} .accordion__title[aria-expanded="true"] .icon-toggle-minus {
    opacity: 1;
  }

  .section--{{ section.id }} .accordion__text-wrapper {
    overflow: hidden;
    height: 0;
    transition: height 150ms ease;
  }

  .section--{{ section.id }} .accordion__text-wrapper[aria-expanded="true"] {
    height: auto;
  }

  .section--{{ section.id }} .accordion__text {
    padding: 12px 0 20px;
    font-size: calc(var(--adjust-body, 1) * 0.95rem);
  }

  .section--{{ section.id }} .accordion__text.rte p {
    margin-bottom: 12px;
  }

  .section--{{ section.id }} .accordion__text.rte p:last-child {
    margin-bottom: 0;
  }

  .section--{{ section.id }} .accordion__text.rte strong {
    font-weight: 600;
  }

  .section--{{ section.id }} .accordion__text.rte a {
    color: #0066cc;
    text-decoration: underline;
  }

  .section--{{ section.id }} .accordion__text.rte a:hover {
    text-decoration: none;
  }
</style>

<section 
  class="section section--{{ section.id }} geometry-specifications"
  data-section-id="{{ section.id }}"
  data-section-type="geometry-specifications"
  aria-label="Geometry and Specifications"
>
  <div class="geometry-specs__wrapper">
    {% if section.settings.title != blank %}
      <h2 class="geometry-specs__title h2">{{ section.settings.title }}</h2>
    {% endif %}

    <div class="geometry-specs__content">
      <div class="geometry-specs__accordion" data-collapsible-single>
        <div class="accordion__content">
          {%- for block in section.blocks -%}
            <div class="accordion__item" {{ block.shopify_attributes }}>
              <button 
                class="accordion__title"
                aria-expanded="false"
                aria-controls="geometry-{{ section.id }}-{{ forloop.index }}"
                data-collapsible-trigger
              >
                <span class="accordion__title-text">{{ block.settings.title | escape }}</span>
                <div class="accordion__icons">
                  <svg class="icon-toggle-plus" fill="none" viewBox="0 0 24 24">
                    <path d="M12 5v14M5 12h14" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                  </svg>
                  <svg class="icon-toggle-minus" fill="none" viewBox="0 0 24 24">
                    <path d="M5 12h14" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                  </svg>
                </div>
              </button>

              <div 
                class="accordion__text-wrapper" 
                id="geometry-{{ section.id }}-{{ forloop.index }}"
                aria-expanded="false"
              >
                <div class="accordion__text rte">
                  {{ block.settings.content }}
                </div>
              </div>
            </div>
          {%- endfor -%}
        </div>
      </div>

      <div class="geometry-specs__image">
        {% unless section.settings.image == blank %}
          <img
            src="{{ section.settings.image | image_url: width: 300 }}"
            srcset="
              {{ section.settings.image | image_url: width: 300 }} 300w,
              {{ section.settings.image | image_url: width: 600 }} 600w,
              {{ section.settings.image | image_url: width: 900 }} 900w,
              {{ section.settings.image | image_url: width: 1200 }} 1200w,
              {{ section.settings.image | image_url: width: 1500 }} 1500w,
              {{ section.settings.image | image_url: width: 1800 }} 1800w
            "
            sizes="{{ sizes }}"
            width="300"
            height="{{ 300 | divided_by: section.settings.image.aspect_ratio | round }}"
            alt="{{ section.settings.image.alt | default: 'Geometry diagram with labeled measurements' | escape }}"
            loading="{% if section.index == 1 %}eager{% else %}lazy{% endif %}"
            {% if section.index == 1 %}fetchpriority="high"{% endif %}
            style="object-position: {{ section.settings.image.presentation.focal_point | default: 'center' }}"
          >
        {% else %}
          {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--light' }}
        {% endunless %}
      </div>
    </div>
  </div>
</section>

<script>
  (function() {
    const root = document.querySelector('[data-section-id="{{ section.id }}"] [data-collapsible-single]');
    if (!root) return;

    root.addEventListener('click', function(e) {
      const btn = e.target.closest('[data-collapsible-trigger]');
      if (!btn) return;

      e.preventDefault();

      const panelId = btn.getAttribute('aria-controls');
      const panel = document.getElementById(panelId);
      if (!panel) return;

      const isOpen = panel.getAttribute('aria-expanded') === 'true';

      // Close all other panels (single-open behavior)
      root.querySelectorAll('.accordion__text-wrapper[aria-expanded="true"]').forEach(function(p) {
        if (p !== panel) {
          p.setAttribute('aria-expanded', 'false');
          const relatedBtn = root.querySelector('[aria-controls="' + p.id + '"]');
          if (relatedBtn) {
            relatedBtn.setAttribute('aria-expanded', 'false');
          }
        }
      });

      // Toggle current panel
      const newState = String(!isOpen);
      panel.setAttribute('aria-expanded', newState);
      btn.setAttribute('aria-expanded', newState);
    });

    // Keyboard support
    root.querySelectorAll('[data-collapsible-trigger]').forEach(function(btn) {
      btn.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          btn.click();
        }
      });
    });
  })();
</script>

{% schema %}
{
  "name": "Geometry & Specifications",
  "class": "js-section__geometry-specifications",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section title",
      "default": "Geometry & Specifications"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Title font size",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Diagram image",
      "info": "Recommended: High-resolution image showing product geometry with labeled measurements"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Top padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Bottom padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "accordion_item",
      "name": "Specification Group",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Group title",
          "default": "Geometry"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Specifications",
          "default": "<p><strong>A:</strong> Frame length - 1800mm</p><p><strong>B:</strong> Wheelbase - 1200mm</p><p><strong>C:</strong> Handle height - 1100mm</p><p><strong>D:</strong> Seat height - 850mm</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Geometry & Specifications",
      "settings": {
        "title": "Geometry & Specifications"
      },
      "blocks": [
        {
          "type": "accordion_item",
          "settings": {
            "title": "Geometry",
            "content": "<p><strong>A:</strong> Frame length - 1800mm</p><p><strong>B:</strong> Wheelbase - 1200mm</p><p><strong>C:</strong> Handle height - 1100mm</p><p><strong>D:</strong> Seat height - 850mm</p><p><strong>E:</strong> Ground clearance - 180mm</p><p><strong>F:</strong> Wheel diameter - 26 inches</p><p><strong>G:</strong> Total length - 1950mm</p>"
          }
        },
        {
          "type": "accordion_item",
          "settings": {
            "title": "Specifications",
            "content": "<p><strong>Battery:</strong> 48V 17.5Ah removable lithium battery</p><p><strong>Motor:</strong> 750W rear hub motor</p><p><strong>Weight:</strong> 29kg (64 lbs)</p><p><strong>Range:</strong> Up to 80km (50 miles)</p><p><strong>Class:</strong> Class 2 e-bike</p><p><strong>Max Speed:</strong> 32 km/h (20 mph)</p><p><strong>Payload:</strong> 136kg (300 lbs)</p>"
          }
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": ["*"],
    "groups": ["header", "footer"]
  }
}
{% endschema %}